name: BUILD

on:
  push:
  # schedule:
  #   - cron:  '1 */8 * * *'

jobs:
  # buildAUR:
  #   strategy:
  #     matrix:
  #       repos: [linuxqq-new]
  #       # include:
  #       #   - repos: git-cola
  #       #     preinstall-pkgs: "at-spi2-core"
  #       #   - repos: realesrgan-ncnn-vulkan
  #       #     preinstall-pkgs: "vulkan-intel"
  #       #   - repos: python-octodns
  #       #     preinstall-pkgs: "python-pip"

  #     fail-fast: false
      
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - uses: ./build-aur-action
  #     with:
  #       repo-name: ${{ matrix.repos }}
  #       preinstallPkgs: ${{ matrix.preinstall-pkgs }}
    
  #   - uses: actions/upload-artifact@v3
  #     with:
  #       path: ./*/*.pkg.tar.zst
  #       name: ${{ matrix.repos }}
  #       if-no-files-found: error
        
  #   # - uses: ncipollo/release-action@v1
  #   #   with:
  #   #     allowUpdates: true
  #   #     tag: "packages"
  #   #     artifacts: "./*/*.zst"
  #   #     token: ${{ secrets.GITHUB_TOKEN }}

  buildNonAUR:
    strategy:
      matrix:
        PKGBUILDs: [ffmpeg-amd-full-bak]

      fail-fast: false
      
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build Non-AUR packages
        id: makepkg
        uses: Pinghigh/pkgbuild-action@pre1
        with:
          pkgdir: ${{ matrix.PKGBUILDs }}
          
      - uses: actions/upload-artifact@v3
        with:
          path: ./*/*.pkg.tar.zst
          if-no-files-found: error
      
      # - uses: ncipollo/release-action@v1
      #   with:
      #     allowUpdates: true
      #     tag: "packages"
      #     artifacts: ${{ steps.makepkg.outputs.pkgfile0 }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
      


  uploadToOneDrive:      
    runs-on: ubuntu-latest
    if: always()
    needs: [buildNonAUR]
    # needs: [buildNonAUR]

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/download-artifact@v3
        id: download
      - uses: ./create-db-and-upload-action
        with:
          RCLONE_ONEDRIVE_CLIENT_ID: ${{ secrets.RCLONE_ONEDRIVE_CLIENT_ID }}
          RCLONE_ONEDRIVE_CLIENT_SECRET: ${{ secrets.RCLONE_ONEDRIVE_CLIENT_SECRET }}
          RCLONE_ONEDRIVE_REGION: global
          RCLONE_ONEDRIVE_TOKEN: ${{ secrets.RCLONE_ONEDRIVE_TOKEN }}
          RCLONE_ONEDRIVE_DRIVE_ID: ${{ secrets.RCLONE_ONEDRIVE_DRIVE_ID }}
          RCLONE_ONEDRIVE_DRIVE_TYPE: business
          dest_path: /RepoTikogasa
          repo_name: repo-kogasa
          gpg-privatekey: ${{ secrets.GPG_PRIVATE_KEY }}
          local_path: ./
      
      
